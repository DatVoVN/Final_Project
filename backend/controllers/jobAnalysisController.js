const OpenAI = require("openai");
const JobPosting = require("../models/JobPosting");

const openai = new OpenAI({
  apiKey: process.env.OPENAI_API_KEY,
});

const extractJobInfo = async (job) => {
  const jobText = `
Ti√™u ƒë·ªÅ: ${job.title}
M√¥ t·∫£ c√¥ng vi·ªác:
${job.description}

Y√™u c·∫ßu c√¥ng vi·ªác:
${job.requirements}
`;

  const prompt = `
B·∫°n l√† m·ªôt tr·ª£ l√Ω AI chuy√™n tr√≠ch xu·∫•t d·ªØ li·ªáu t·ª´ tin tuy·ªÉn d·ª•ng IT. H√£y ph√¢n t√≠ch n·ªôi dung d∆∞·ªõi ƒë√¢y v√† tr·∫£ v·ªÅ d·ªØ li·ªáu d∆∞·ªõi d·∫°ng JSON c√≥ c·∫•u tr√∫c nh∆∞ sau:

- summary: M√¥ t·∫£ ng·∫Øn g·ªçn v·ªÅ c√¥ng vi·ªác
- skills: Danh s√°ch k·ªπ nƒÉng y√™u c·∫ßu
- education: Y√™u c·∫ßu h·ªçc v·∫•n (n·∫øu c√≥)
- experience: Y√™u c·∫ßu kinh nghi·ªám
- certifications: C√°c ch·ª©ng ch·ªâ n·∫øu c√≥ y√™u c·∫ßu
- languages: C√°c ng√¥n ng·ªØ l·∫≠p tr√¨nh, c√¥ng ngh·ªá, ho·∫∑c ng√¥n ng·ªØ giao ti·∫øp

N·∫øu kh√¥ng c√≥ th√¥ng tin, h√£y ƒë·ªÉ tr·ªëng ("") ho·∫∑c m·∫£ng r·ªóng [].

JOB:
"""
${jobText}
"""

JSON k·∫øt qu·∫£:
`;

  try {
    const completion = await openai.chat.completions.create({
      model: "gpt-3.5-turbo",
      messages: [
        {
          role: "system",
          content: "B·∫°n l√† m·ªôt chuy√™n gia ph√¢n t√≠ch job tuy·ªÉn d·ª•ng IT.",
        },
        { role: "user", content: prompt },
      ],
      temperature: 0,
      max_tokens: 700,
    });

    const gptResponse = completion.choices[0].message.content.trim();
    return JSON.parse(gptResponse);
  } catch (error) {
    console.error(`‚ùå GPT Error (jobId ${job._id}):`, error.message || error);
    return null;
  }
};

exports.extractAllJobsInfo = async (req, res) => {
  try {
    const jobs = await JobPosting.find();

    for (const job of jobs) {
      console.log(`üîç ƒêang ph√¢n t√≠ch: ${job.title} (${job._id})`);
      const structuredInfo = await extractJobInfo(job);
      if (structuredInfo) {
        job.structuredInfo = structuredInfo;
        await job.save();
        console.log(`‚úÖ L∆∞u structuredInfo cho job ${job._id}`);
      } else {
        console.warn(`‚ö†Ô∏è B·ªè qua job ${job._id}`);
      }
      await new Promise((r) => setTimeout(r, 1000)); // Ngh·ªâ 1s
    }

    return res.json({ message: "‚úÖ Ph√¢n t√≠ch v√† l∆∞u to√†n b·ªô job th√†nh c√¥ng" });
  } catch (err) {
    console.error("‚ùå L·ªói server khi ph√¢n t√≠ch jobs:", err);
    return res.status(500).json({ error: "L·ªói server" });
  }
};
